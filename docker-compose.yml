services:


  order:
    build:
      context: ./order-service
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://orderdb:5432/folex"
      SPRING_DATASOURCE_USERNAME: order
      SPRING_DATASOURCE_PASSWORD: order
    ports:
      - "9080:8080"

  factory:
    build:
      context: ./factory

  workflow:
    build:
      context: ./workflow
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://camundadb:5432/folex"
      SPRING_DATASOURCE_USERNAME: order
      SPRING_DATASOURCE_PASSWORD: order
      CAMUNDA_BPM_ADMIN_USER_ID: folex
      CAMUNDA_BPM_ADMIN_USER_PASSWORD: folex
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_USERNAME: folex
      SPRING_RABBITMQ_PASSWORD: folex
      FOLEX_API_ORDER: "http://order:8080"
      FOLEX_API_FACTORY: "http://factory:8080"

    ports:
      - "9081:8080"


  orderdb:
    image: postgres:15
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order
      POSTGRES_DB: folex
    ports:
      - "5432:5432"

  camundadb:
    image: postgres:15
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order
      POSTGRES_DB: folex
    ports:
      - "5433:5432"

  rabbit:
    image: rabbitmq:3.11-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: folex
      RABBITMQ_DEFAULT_PASS: folex
    ports:
      - "9082:15672"

  wedding-watches:
    build:
      context: ./wedding-watches
    environment:
      QUEUE_URL: rabbit
      QUEUE_USERNAME: folex
      QUEUE_PASSWORD: folex
      ORIGIN: https://127.0.0.1
      NODE_EXTRA_CA_CERTS: /folexca.pem
    ports:
      - "3000:3000"

  watch-order:
    image: nginx
    hostname: watch-order
    volumes:
      - './nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
      - './certs/watch-order.key:/watch-order.key'
      - './certs/watch-order.crt:/watch-order.crt'
    ports:
    - "443:443"
    